<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gavin.code.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="gavin.code.entity.User">
        <!--@mbg.generated-->

        <!--    property对应java属性名,column对应数据段字段-->
        <id column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <collection property="order" ofType="gavin.code.entity.Order">

            <id property="oid" column="oid"/>
            <result property="otime" column="otime"/>
            <result property="totalPrice" column="totalprice"/>
            <result property="userId" column="ouid"/>
            <collection property="item" ofType="gavin.code.entity.Orderitems">

                <id property="id" column="odid"/>
                <result property="oid" column="odoid"/>
                <result property="pid" column="odpid"/>
                <result property="amount" column="amount"/>
                <collection property="products" ofType="gavin.code.entity.Products">

                    <id property="pid" column="pid"/>
                    <result property="pname" column="pname"/>
                    <result property="description" column="description"/>
                    <result property="price" column="price"/>

                </collection>

            </collection>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        `uid`, username, `password`, gender
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from user
        where `uid` = #{uid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from user
        where `uid` = #{uid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="uid" keyProperty="uid" parameterType="gavin.code.entity.User"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into user (username, `password`, gender
        )
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="uid" keyProperty="uid" parameterType="gavin.code.entity.User"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="gender != null">
                gender,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="gavin.code.entity.User">
        <!--@mbg.generated-->
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
        </set>
        where `uid` = #{uid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="gavin.code.entity.User">
        <!--@mbg.generated-->
        update user
        set username = #{username,jdbcType=VARCHAR},
        `password` = #{password,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=INTEGER}
        where `uid` = #{uid,jdbcType=INTEGER}
    </update>
<!--    &#45;&#45; 四个表 user u order o orderdetails od products p-->
    <select id="selectuser" resultMap="BaseResultMap">
       select
        u.uid,
        u.username ,
        u.password,
        u.gender,
        o.oid as 'oid',
        o.`otime` as 'otime',
        o.total_price as 'totalprice',
        o.user_Id as 'ouid',
        od.id as 'odid',
        od.oid as 'odoid',
        od.pid as 'odpid',
        od.amount as 'amount',
        p.pid as 'pid',
        p.pname as 'pname',
        p.price as 'price',
        p.description as 'description'
        from `user` u
        left join
        `order` o
        on u.uid=o.oid
        left join
        orderitems od
        on od.oid=o.oid
        left join
        products p
        on p.pid=od.pid
        where
        u.uid=#{id,jdbcType=INTEGER}

    </select>
</mapper>